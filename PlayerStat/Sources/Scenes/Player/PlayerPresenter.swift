//
//  PlayerPresenter.swift
//  PlayerStat
//
//  Created by Le Thanh Hai on 11/15/17.
//  Copyright (c) 2017 haile. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol PlayerPresenterInput {
    func present(response: PlayerResponse)
}

protocol PlayerPresenterOutput: class {
    func display(viewModel: PlayerViewModel)
}

class PlayerPresenter: PlayerPresenterInput {
  weak var output: PlayerPresenterOutput!
  
  // MARK: - Presentation logic
    func present(response: PlayerResponse) {
        let detail = response.playerDetail
        let player = detail.player
        var sections = [SectionModel]()
        
        var list = [HeaderModel]()
        let playerModel = PlayerModel(player: player, style: PlayerModel.Style(imageSize: CGSize(width: 140, height: 200)))
        // go through each field in the model
        
        var header = HeaderModel(title: "Personal information")
        self.itemModel(list: &list, title: "Full name", value: detail.player.fullName)
        self.itemModel(list: &list, title: "Position", value: detail.player.position)
        self.itemModel(list: &list, title: "Birth date", value: detail.birthDate)
        self.itemModel(list: &list, title: "Height (cm)", value: detail.height)
        self.itemModel(list: &list, title: "Weight (kg)", value: detail.weight)
        sections.append(SectionModel(header: header, items: list))
        
        header = HeaderModel(title: "Career status")
        list.removeAll()
        self.itemModel(list: &list, title: "Games", value: detail.games)
        self.itemModel(list: &list, title: "Points", value: detail.points)
        self.itemModel(list: &list, title: "Tries", value: detail.tries)
        self.itemModel(list: &list, title: "Win percentage", value: detail.winPercentage)
        sections.append(SectionModel(header: header, items: list))
        
        header = HeaderModel(title: "Last match status")
        list.removeAll()
        sections.append(SectionModel(header: header, items: list))
        
        
        
        self.output.display(viewModel: PlayerViewModel(playerModel: playerModel, list: sections))
    }
    
    private func itemModel(list: inout [HeaderModel], title: String, value: Any?) {
        let style = HeaderModel.cellStyle()
        if let value = value as? String {
            list.append(HeaderModel(title: title, rightTitle: value, style: style))
        } else if let value = value as? Date {
            let formatter = DateFormatter()
            formatter.dateFormat = "dd/MM/yy"
            list.append(HeaderModel(title: title, rightTitle: formatter.string(from: value), style: style))
        } else if let value = value as? Double {
            list.append(HeaderModel(title: title, rightTitle: String(format: "%.f", value), style: style))
        } else if let value = value as? Int {
            list.append(HeaderModel(title: title, rightTitle: String(format: "%d", value), style: style))
        }
    }
}

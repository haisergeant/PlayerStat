//
//  PlayerViewController.swift
//  PlayerStat
//
//  Created by Le Thanh Hai on 11/15/17.
//  Copyright (c) 2017 haile. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import ReactiveCocoa
import ReactiveSwift
import BonMot
import EasyPeasy

protocol PlayerViewControllerInput {
    func display(viewModel: PlayerViewModel)
}

protocol PlayerViewControllerOutput {
    func load(request: PlayerRequest)
}

class PlayerViewController: BaseViewController, PlayerViewControllerInput {
    var output: PlayerViewControllerOutput!
    var router: PlayerRouter!
    
    // MARK: - Object lifecycle
    var tableView = UITableView()
    var result = [HeaderModel]()
    
    let player: Player!
    init(player: Player) {
        self.player = player
        super.init()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func configureSubviews() {
        super.configureSubviews()
        self.view.addSubview(self.tableView)
        
        self.tableView.dataSource = self
        self.tableView.rowHeight = UITableViewAutomaticDimension
        self.tableView.estimatedRowHeight = 140
        self.tableView.separatorStyle = .none
        self.tableView.allowsSelection = false
    }
    
    override func configureLayout() {
        super.configureLayout()
        self.tableView.easy.layout(Edges())
    }
    
    override func configureContent() {
        super.configureContent()
        self.output.load(request: PlayerRequest(player: self.player))
    }
    
    func display(viewModel: PlayerViewModel) {
        result.removeAll()
        
        self.tableView.reloadData()
    }
}

extension PlayerViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return result.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let model = self.result[indexPath.row]
        let cell = TitleAndDetailCell()
        cell.configure(model: model)
        
        return cell
    }
}


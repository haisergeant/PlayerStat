//
//  MatchViewController.swift
//  PlayerStat
//
//  Created by Le Thanh Hai on 11/15/17.
//  Copyright (c) 2017 haile. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import EasyPeasy
import BonMot

protocol MatchViewControllerInput {
    func display(viewModel: MatchViewModel)
}

protocol MatchViewControllerOutput {
    func load(request: MatchRequest)
}

class MatchViewController: BaseViewController, MatchViewControllerInput {
    var output: MatchViewControllerOutput!
    var router: MatchRouter!
    
    var tableView = UITableView(frame: .zero, style: UITableViewStyle.plain)
    
    var result = [MatchModel]()
    
    // MARK: - Object lifecycle
    override init() {
        super.init()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func configureSubviews() {
        super.configureSubviews()
        self.view.addSubview(self.tableView)
        
        self.tableView.delegate = self
        self.tableView.dataSource = self
        self.tableView.rowHeight = UITableViewAutomaticDimension
        self.tableView.estimatedRowHeight = 140        
        self.tableView.separatorStyle = .none
    }
    
    override func configureLayout() {
        super.configureLayout()
        self.tableView.easy.layout(Edges())
    }
    
    override func configureContent() {
        super.configureContent()
        self.output.load(request: MatchRequest())
    }
    
    func display(viewModel: MatchViewModel) {
        result.removeAll()
        result.append(contentsOf: viewModel.model)
        self.tableView.reloadData()
    }
}

extension MatchViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return result.count
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return result[section].playersModel.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let match = self.result[indexPath.section]
        let players = match.playersModel[indexPath.row]
        let cell = PlayersCell(identifier: "playersCell")
        
        cell.configure(model: players)
        return cell
    }
}

extension MatchViewController: UITableViewDelegate {
    
}
